const utils = require('../../functions/utils.js');
const config = require('../../setting/cfg.js');

module.exports.run = async (bot, message, args) => {
    message.delete();
    //message.delete();
    let VC = message.member.voiceChannel;
    if (!VC) return utils.noReason(message, `${message.author}, –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É! ${config['prefix'][Math.floor(Math.random() * config['prefix'].length)]}play <music/url>`);

    let url = args[0] ? args[0].replace(/<(.+)>/g, '$1') : '';
    let pl = /^https?:\/\/(www.youtube.com|youtube.com)\/playlist(.*)$/

    let searchString = args.join(' ');
    if (!url || !searchString) return utils.noReason(message, `${message.author}, –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ –∏–ª–∏ url! ${config['prefix'][Math.floor(Math.random() * config['prefix'].length)]}play <music/url>`);

    let perms = VC.permissionsFor(message.client.user);
    if (!perms.has('CONNECT')) return utils.noReason(message, `${message.author}, –£ –º–µ–Ω—è –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–∞–º! ${config['prefix'][Math.floor(Math.random() * config['prefix'].length)]}play <music/url>`);
    if (!perms.has('SPEAK')) return utils.noReason(message, `${message.author}, –£ –º–µ–Ω—è –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ! ${config['prefix'][Math.floor(Math.random() * config['prefix'].length)]}play <music/url>`);

    if (url.match(pl)) {
        let playlist = await bot.youtube.getPlaylist(url);
        let videos = await playlist.getVideos();

        for (const vid of Object.values(videos)) {
            let video = await bot.youtube.getVideoByID(vid.id)
            await bot.handleVideo(video, message, VC, true)
        }

        return utils.done(message, `üéµ **${playlist.title}** –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å.`);
    } else {
        try {
            var video = await bot.youtube.getVideo(url);
        } catch (err) {
            if (err) undefined;
            try {
                var vid = await bot.youtube.searchVideos(searchString, 1);
                var video = await bot.youtube.getVideoByID(vid[0].id);
            } catch (err) {
                console.error(err);
                return utils.noReason(message, `${message.author}, –≤–∏–¥–µ–æ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º \`${searchString}\` –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! ${config['prefix'][Math.floor(Math.random() * config['prefix'].length)]}play <music/url>`);
            }
        }
        return bot.handleVideo(video, message, VC);
    }
};